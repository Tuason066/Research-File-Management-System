/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package research.file.manage.system.studentFrames;

import javax.swing.table.TableModel;

/**
 *
 * @author Tuason
 */
public class Scratch extends javax.swing.JFrame {

    /**
     * Creates new form Scratch
     */
    public Scratch() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        bookTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bookTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        bookTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(bookTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(141, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(69, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bookTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookTableMouseClicked
         // ###### FIXED ME
        
        
        int index = bookTable.getSelectedRow();
        TableModel model = bookTable.getModel();

        if (index != -1 && index < model.getRowCount()) {
            String title = (String) model.getValueAt(index, 1);
            int publicationYear = (int) model.getValueAt(index, 3);
            String publisher = (String) model.getValueAt(index, 9);
            String authorsStr = (String) model.getValueAt(index, 2);

            if(authorsStr.isEmpty()) {
                // Format and display the book reference
                String formattedReference = "Unknown." + publicationYear + "." + title + "." + publisher;
                new APAFormat(formattedReference).setVisible(true);
            } else {
                 // Format and display the book reference
                String formattedReference = formatAuthorsInAPA(authorsStr) + "." + publicationYear + "." + title + "." + publisher;
                new APAFormat(formattedReference).setVisible(true);
            }

        } else {
            // Handle the case where the selected row is invalid
            System.out.println("Invalid row selected.");
        }
    }//GEN-LAST:event_bookTableMouseClicked

    
    // Method to format authors in APA style as "Author Last Name, First Initial(s)"
    private static String formatAuthorsInAPA(String authors) {
        if (authors == null || authors.isEmpty()) {
            return "Unknown";  // or handle the case as needed
        }

        String[] authorsArr = authors.split(", ");
        String formattedAuthors = "";

        for (int i = 0; i < authorsArr.length; i++) {
            String[] authorName = authorsArr[i].split(" ");

            // Check if authorName is not empty
            if (authorName.length > 0) {
                String initials = "";

                // get the first name initials
                for (int j = 0; j < authorName.length - 1; j++) {
                    String initial = authorName[j].substring(0, 1).toUpperCase();
                    initials += initial + ".";
                }

                // get the last name
                String lastName = authorName[authorName.length - 1].substring(0, 1).toUpperCase() +
                        authorName[authorName.length - 1].substring(1);

                String author = lastName + ", " + initials;

                if (i == authorsArr.length - 1) {
                    formattedAuthors = formattedAuthors + " & " + author;
                } else {
                    formattedAuthors = formattedAuthors + " " + author + ",";
                }
            }
        }

        return formattedAuthors;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Scratch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Scratch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Scratch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Scratch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Scratch().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable bookTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
